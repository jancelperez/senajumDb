{"version":3,"sources":["db-test.js"],"names":["test","require","uuid","r","Db","fixtures","beforeEach","t","dbName","v4","db","connect","context","true","connected","afterEach","always","disconnect","false","conn","dbDrop","run","is","guardarImagen","imagen","getImage","created","description","url","likes","liked","deepEqual","tags","user_id","id","public_id","encode","truthy","createdAt","likeImagen","result","getImagen","imagenes","getImages","guardarImagenes","map","img","Promise","all","getImagenes","length"],"mappings":"AAAA;;;;;;;AAEA,MAAMA,OAAOC,QAAQ,KAAR,CAAb;AACA,MAAMC,OAAOD,QAAQ,aAAR,CAAb;AACA,MAAME,IAAIF,QAAQ,WAAR,CAAV;AACA,MAAMG,KAAKH,QAAQ,KAAR,CAAX;AACA,MAAMI,WAAWJ,QAAQ,YAAR,CAAjB;;AAEAD,KAAKM,UAAL,CAAgB,0BAAhB;AAAA,+BAA4C,WAAMC,CAAN,EAAW;AAAA;;AACrD,UAAMC,SAAU,YAAWN,KAAKO,EAAL,EAAU,EAArC;AACA,UAAMC,KAAK,IAAIN,EAAJ,CAAO,EAAEM,IAAIF,MAAN,EAAP,CAAX;AACA,UAAME,GAAGC,OAAH,EAAN;AACAJ,MAAEK,OAAF,CAAUF,EAAV,GAAeA,EAAf;AACAH,MAAEK,OAAF,CAAUJ,MAAV,GAAmBA,MAAnB;AACAD,MAAEM,IAAF,uBAAO,qCAAGC,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAqB,gBAArB;AACD,GAPD;;AAAA;AAAA;AAAA;AAAA;;AASAd,KAAKe,SAAL,CAAeC,MAAf,CAAsB,yCAAtB;AAAA,gCAAiE,WAAMT,CAAN,EAAW;AAAA;;AAC1E,QAAIG,KAAKH,EAAEK,OAAF,CAAUF,EAAnB;AACA,QAAIF,SAASD,EAAEK,OAAF,CAAUJ,MAAvB;;AAEA,UAAME,GAAGO,UAAH,EAAN;AACAV,MAAEW,KAAF,yBAAQ,sCAAGJ,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAsB,mBAAtB;;AAEA,QAAIK,OAAO,MAAMhB,EAAEQ,OAAF,CAAU,EAAV,CAAjB;AACA,UAAMR,EAAEiB,MAAF,CAASZ,MAAT,EAAiBa,GAAjB,CAAqBF,IAArB,CAAN;AACD,GATD;;AAAA;AAAA;AAAA;AAAA;;AAWAnB,KAAK,gBAAL;AAAA,gCAAuB,WAAMO,CAAN,EAAW;AAAA;;AAChC,QAAIG,KAAKH,EAAEK,OAAF,CAAUF,EAAnB;AACAH,MAAEe,EAAF,CAAK,OAAOZ,GAAGa,aAAf,EAA8B,UAA9B,EAA0C,8BAA1C;;AAEA,QAAIC,SAASnB,SAASoB,QAAT,EAAb;;AAEA,QAAIC,UAAU,MAAMhB,GAAGa,aAAH,CAAiBC,MAAjB,CAApB;AACAjB,MAAEe,EAAF,CAAKI,QAAQC,WAAb,EAA0BH,OAAOG,WAAjC;AACApB,MAAEe,EAAF,CAAKI,QAAQE,GAAb,EAAkBJ,OAAOI,GAAzB;AACArB,MAAEe,EAAF,CAAKI,QAAQG,KAAb,EAAoBL,OAAOK,KAA3B;AACAtB,MAAEe,EAAF,CAAKI,QAAQI,KAAb,EAAoBN,OAAOM,KAA3B;AACAvB,MAAEwB,SAAF,CAAYL,QAAQM,IAApB,EAA0B,CAAC,QAAD,EAAW,MAAX,EAAmB,UAAnB,CAA1B;AACAzB,MAAEe,EAAF,CAAKI,QAAQO,OAAb,EAAsBT,OAAOS,OAA7B;AACA1B,MAAEe,EAAF,CAAK,OAAOI,QAAQQ,EAApB,EAAwB,QAAxB;AACA3B,MAAEe,EAAF,CAAKI,QAAQS,SAAb,EAAwBjC,KAAKkC,MAAL,CAAYV,QAAQQ,EAApB,CAAxB;AACA3B,MAAE8B,MAAF,yBAAS,2CAAQC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,GAhBD;;AAAA;AAAA;AAAA;AAAA;;AAkBAtC,KAAK,eAAL;AAAA,gCAAsB,WAAMO,CAAN,EAAW;AAAA;;AAC/B,QAAIG,KAAKH,EAAEK,OAAF,CAAUF,EAAnB;AACAH,MAAEe,EAAF,CAAK,OAAOZ,GAAG6B,UAAf,EAA2B,UAA3B,EAAuC,4BAAvC;;AAEA,QAAIf,SAASnB,SAASoB,QAAT,EAAb;AACA,QAAIC,UAAU,MAAMhB,GAAGa,aAAH,CAAiBC,MAAjB,CAApB;AACA,QAAIgB,SAAS,MAAM9B,GAAG6B,UAAH,CAAcb,QAAQS,SAAtB,CAAnB;AACA5B,MAAEM,IAAF,yBAAO,0CAAOiB,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACAvB,MAAEe,EAAF,CAAKkB,OAAOX,KAAZ,EAAmBL,OAAOK,KAAP,GAAe,CAAlC;AACD,GATD;;AAAA;AAAA;AAAA;AAAA;;AAWA7B,KAAK,gBAAL;AAAA,gCAAuB,WAAMO,CAAN,EAAW;AAChC,QAAIG,KAAKH,EAAEK,OAAF,CAAUF,EAAnB;AACAH,MAAEe,EAAF,CAAK,OAAOZ,GAAG+B,SAAf,EAA0B,UAA1B,EAAsC,yBAAtC;;AAEA,QAAIjB,SAASnB,SAASoB,QAAT,EAAb;AACA,QAAIC,UAAU,MAAMhB,GAAGa,aAAH,CAAiBC,MAAjB,CAApB;AACA,QAAIgB,SAAS,MAAM9B,GAAG+B,SAAH,CAAaf,QAAQS,SAArB,CAAnB;;AAEA5B,MAAEwB,SAAF,CAAYL,OAAZ,EAAqBc,MAArB;AACD,GATD;;AAAA;AAAA;AAAA;AAAA;;AAWAxC,KAAK,2BAAL;AAAA,gCAAkC,WAAMO,CAAN,EAAW;AAC3C,QAAIG,KAAKH,EAAEK,OAAF,CAAUF,EAAnB;AACA,QAAIgC,WAAW,MAAMrC,SAASsC,SAAT,EAArB;AACA,QAAIC,kBAAkBF,SAASG,GAAT,CAAa;AAAA,aAAOnC,GAAGa,aAAH,CAAiBuB,GAAjB,CAAP;AAAA,KAAb,CAAtB;AACA,QAAIpB,UAAU,MAAMqB,QAAQC,GAAR,CAAYJ,eAAZ,CAApB;AACA,QAAIJ,SAAS,MAAM9B,GAAGuC,WAAH,EAAnB;;AAEA1C,MAAEe,EAAF,CAAKI,QAAQwB,MAAb,EAAqBV,OAAOU,MAA5B;AACD,GARD;;AAAA;AAAA;AAAA;AAAA","file":"db-test.js","sourcesContent":["'use strict'\r\n\r\nconst test = require('ava')\r\nconst uuid = require('uuid-base62')\r\nconst r = require('rethinkdb')\r\nconst Db = require('../')\r\nconst fixtures = require('./fixtures')\r\n\r\ntest.beforeEach('configurar base de datos', async t => {\r\n  const dbName = `senagram_${uuid.v4()}`\r\n  const db = new Db({ db: dbName })\r\n  await db.connect()\r\n  t.context.db = db\r\n  t.context.dbName = dbName\r\n  t.true(db.connected, 'esta conectado')\r\n})\r\n\r\ntest.afterEach.always('desconectando y limpiando base de datos', async t => {\r\n  let db = t.context.db\r\n  let dbName = t.context.dbName\r\n\r\n  await db.disconnect()\r\n  t.false(db.connected, 'esta desconectado')\r\n\r\n  let conn = await r.connect({})\r\n  await r.dbDrop(dbName).run(conn)\r\n})\r\n\r\ntest('guardar imagen', async t => {\r\n  let db = t.context.db\r\n  t.is(typeof db.guardarImagen, 'function', 'guardarImagen es una funcion')\r\n\r\n  let imagen = fixtures.getImage()\r\n\r\n  let created = await db.guardarImagen(imagen)\r\n  t.is(created.description, imagen.description)\r\n  t.is(created.url, imagen.url)\r\n  t.is(created.likes, imagen.likes)\r\n  t.is(created.liked, imagen.liked)\r\n  t.deepEqual(created.tags, ['genial', 'tags', 'senagram'])\r\n  t.is(created.user_id, imagen.user_id)\r\n  t.is(typeof created.id, 'string')\r\n  t.is(created.public_id, uuid.encode(created.id))\r\n  t.truthy(created.createdAt)\r\n})\r\n\r\ntest('like imagenes', async t => {\r\n  let db = t.context.db\r\n  t.is(typeof db.likeImagen, 'function', 'likeImagen es una funcion ')\r\n\r\n  let imagen = fixtures.getImage()\r\n  let created = await db.guardarImagen(imagen)\r\n  let result = await db.likeImagen(created.public_id)\r\n  t.true(result.liked)\r\n  t.is(result.likes, imagen.likes + 1)\r\n})\r\n\r\ntest('obtener imagen', async t => {\r\n  let db = t.context.db\r\n  t.is(typeof db.getImagen, 'function', 'getImage es una funcion')\r\n\r\n  let imagen = fixtures.getImage()\r\n  let created = await db.guardarImagen(imagen)\r\n  let result = await db.getImagen(created.public_id)\r\n\r\n  t.deepEqual(created, result)\r\n})\r\n\r\ntest('listar todas las imagenes', async t => {\r\n  let db = t.context.db\r\n  let imagenes = await fixtures.getImages()\r\n  let guardarImagenes = imagenes.map(img => db.guardarImagen(img))\r\n  let created = await Promise.all(guardarImagenes)\r\n  let result = await db.getImagenes()\r\n\r\n  t.is(created.length, result.length)\r\n})\r\n"]}