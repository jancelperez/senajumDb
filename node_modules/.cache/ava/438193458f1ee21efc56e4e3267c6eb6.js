'use strict';

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

const test = require('ava');
// elparametrotes

test('este test va a pasar', t => {
  t.pass();
});

test('este test falla', t => {
  t.fail();
});

test('esto soporta async/await', (() => {
  var _ref = _asyncToGenerator(function* (t) {
    let p = Promise.resolve(42);
    let secret = yield p;
    t.is(secret, 42);
  });

  return function (_x) {
    return _ref.apply(this, arguments);
  };
})());
//# sourceMappingURL=..\node_modules\.cache\ava\438193458f1ee21efc56e4e3267c6eb6.js.map